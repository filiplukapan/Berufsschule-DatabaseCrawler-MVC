//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace databaseCrawlerFinal.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class moviesEntities : DbContext
    {
        public moviesEntities()
            : base("name=moviesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<a> a { get; set; }
        public virtual DbSet<b> b { get; set; }
        public virtual DbSet<c> c { get; set; }
        public virtual DbSet<characters> characters { get; set; }
        public virtual DbSet<director> director { get; set; }
        public virtual DbSet<genres> genres { get; set; }
        public virtual DbSet<movies> movies { get; set; }
        public virtual DbSet<people> people { get; set; }
        public virtual DbSet<products> products { get; set; }
        public virtual DbSet<races> races { get; set; }
        public virtual DbSet<shows> shows { get; set; }
        public virtual DbSet<tv> tv { get; set; }
        public virtual DbSet<MoviesTable> MoviesTable { get; set; }
    
        public virtual ObjectResult<castGenres_Result> castGenres()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<castGenres_Result>("castGenres");
        }
    
        public virtual int fillcharactersTable(Nullable<int> character_id, string character_name, Nullable<int> race_id)
        {
            var character_idParameter = character_id.HasValue ?
                new ObjectParameter("character_id", character_id) :
                new ObjectParameter("character_id", typeof(int));
    
            var character_nameParameter = character_name != null ?
                new ObjectParameter("character_name", character_name) :
                new ObjectParameter("character_name", typeof(string));
    
            var race_idParameter = race_id.HasValue ?
                new ObjectParameter("race_id", race_id) :
                new ObjectParameter("race_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("fillcharactersTable", character_idParameter, character_nameParameter, race_idParameter);
        }
    
        public virtual int filldirectorTable(Nullable<int> id, string firstname, string lastname)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("filldirectorTable", idParameter, firstnameParameter, lastnameParameter);
        }
    
        public virtual int fillgenresTable(Nullable<int> genre_id, string genre_title)
        {
            var genre_idParameter = genre_id.HasValue ?
                new ObjectParameter("genre_id", genre_id) :
                new ObjectParameter("genre_id", typeof(int));
    
            var genre_titleParameter = genre_title != null ?
                new ObjectParameter("genre_title", genre_title) :
                new ObjectParameter("genre_title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("fillgenresTable", genre_idParameter, genre_titleParameter);
        }
    
        public virtual int fillmoviesTable(string movieDirector, Nullable<int> movieGenreId, Nullable<int> movieMovieId, string movieTitle, Nullable<int> movieYear)
        {
            var movieDirectorParameter = movieDirector != null ?
                new ObjectParameter("MovieDirector", movieDirector) :
                new ObjectParameter("MovieDirector", typeof(string));
    
            var movieGenreIdParameter = movieGenreId.HasValue ?
                new ObjectParameter("MovieGenreId", movieGenreId) :
                new ObjectParameter("MovieGenreId", typeof(int));
    
            var movieMovieIdParameter = movieMovieId.HasValue ?
                new ObjectParameter("MovieMovieId", movieMovieId) :
                new ObjectParameter("MovieMovieId", typeof(int));
    
            var movieTitleParameter = movieTitle != null ?
                new ObjectParameter("MovieTitle", movieTitle) :
                new ObjectParameter("MovieTitle", typeof(string));
    
            var movieYearParameter = movieYear.HasValue ?
                new ObjectParameter("MovieYear", movieYear) :
                new ObjectParameter("MovieYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("fillmoviesTable", movieDirectorParameter, movieGenreIdParameter, movieMovieIdParameter, movieTitleParameter, movieYearParameter);
        }
    
        public virtual int fillpeopleTable(Nullable<int> person_id, string first_name, string last_name, Nullable<int> account_type, Nullable<int> dob, string compress_pass, string hash_pass, string enc_pass)
        {
            var person_idParameter = person_id.HasValue ?
                new ObjectParameter("person_id", person_id) :
                new ObjectParameter("person_id", typeof(int));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var account_typeParameter = account_type.HasValue ?
                new ObjectParameter("account_type", account_type) :
                new ObjectParameter("account_type", typeof(int));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(int));
    
            var compress_passParameter = compress_pass != null ?
                new ObjectParameter("compress_pass", compress_pass) :
                new ObjectParameter("compress_pass", typeof(string));
    
            var hash_passParameter = hash_pass != null ?
                new ObjectParameter("hash_pass", hash_pass) :
                new ObjectParameter("hash_pass", typeof(string));
    
            var enc_passParameter = enc_pass != null ?
                new ObjectParameter("enc_pass", enc_pass) :
                new ObjectParameter("enc_pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("fillpeopleTable", person_idParameter, first_nameParameter, last_nameParameter, account_typeParameter, dobParameter, compress_passParameter, hash_passParameter, enc_passParameter);
        }
    
        public virtual int fillproductsTable(Nullable<int> product_id, string product_name, string product_category, Nullable<decimal> product_price, string product_sku, string short_description, string idx_sku, string idx_names, string idx_sku_three)
        {
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var product_nameParameter = product_name != null ?
                new ObjectParameter("product_name", product_name) :
                new ObjectParameter("product_name", typeof(string));
    
            var product_categoryParameter = product_category != null ?
                new ObjectParameter("product_category", product_category) :
                new ObjectParameter("product_category", typeof(string));
    
            var product_priceParameter = product_price.HasValue ?
                new ObjectParameter("product_price", product_price) :
                new ObjectParameter("product_price", typeof(decimal));
    
            var product_skuParameter = product_sku != null ?
                new ObjectParameter("product_sku", product_sku) :
                new ObjectParameter("product_sku", typeof(string));
    
            var short_descriptionParameter = short_description != null ?
                new ObjectParameter("short_description", short_description) :
                new ObjectParameter("short_description", typeof(string));
    
            var idx_skuParameter = idx_sku != null ?
                new ObjectParameter("idx_sku", idx_sku) :
                new ObjectParameter("idx_sku", typeof(string));
    
            var idx_namesParameter = idx_names != null ?
                new ObjectParameter("idx_names", idx_names) :
                new ObjectParameter("idx_names", typeof(string));
    
            var idx_sku_threeParameter = idx_sku_three != null ?
                new ObjectParameter("idx_sku_three", idx_sku_three) :
                new ObjectParameter("idx_sku_three", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("fillproductsTable", product_idParameter, product_nameParameter, product_categoryParameter, product_priceParameter, product_skuParameter, short_descriptionParameter, idx_skuParameter, idx_namesParameter, idx_sku_threeParameter);
        }
    
        public virtual int fillracesTable(Nullable<int> race_id, string race_name)
        {
            var race_idParameter = race_id.HasValue ?
                new ObjectParameter("race_id", race_id) :
                new ObjectParameter("race_id", typeof(int));
    
            var race_nameParameter = race_name != null ?
                new ObjectParameter("race_name", race_name) :
                new ObjectParameter("race_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("fillracesTable", race_idParameter, race_nameParameter);
        }
    
        public virtual int fillscifiTable(Nullable<int> movie_id, string movie_title, string genre_title)
        {
            var movie_idParameter = movie_id.HasValue ?
                new ObjectParameter("movie_id", movie_id) :
                new ObjectParameter("movie_id", typeof(int));
    
            var movie_titleParameter = movie_title != null ?
                new ObjectParameter("movie_title", movie_title) :
                new ObjectParameter("movie_title", typeof(string));
    
            var genre_titleParameter = genre_title != null ?
                new ObjectParameter("genre_title", genre_title) :
                new ObjectParameter("genre_title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("fillscifiTable", movie_idParameter, movie_titleParameter, genre_titleParameter);
        }
    
        public virtual int fillshowsTable(Nullable<int> show_id, string show_title, Nullable<int> num_seasons, Nullable<int> initial_year)
        {
            var show_idParameter = show_id.HasValue ?
                new ObjectParameter("show_id", show_id) :
                new ObjectParameter("show_id", typeof(int));
    
            var show_titleParameter = show_title != null ?
                new ObjectParameter("show_title", show_title) :
                new ObjectParameter("show_title", typeof(string));
    
            var num_seasonsParameter = num_seasons.HasValue ?
                new ObjectParameter("num_seasons", num_seasons) :
                new ObjectParameter("num_seasons", typeof(int));
    
            var initial_yearParameter = initial_year.HasValue ?
                new ObjectParameter("initial_year", initial_year) :
                new ObjectParameter("initial_year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("fillshowsTable", show_idParameter, show_titleParameter, num_seasonsParameter, initial_yearParameter);
        }
    
        public virtual int filltvTable(Nullable<int> tv_id, string tv_title, Nullable<int> num_seasons)
        {
            var tv_idParameter = tv_id.HasValue ?
                new ObjectParameter("tv_id", tv_id) :
                new ObjectParameter("tv_id", typeof(int));
    
            var tv_titleParameter = tv_title != null ?
                new ObjectParameter("tv_title", tv_title) :
                new ObjectParameter("tv_title", typeof(string));
    
            var num_seasonsParameter = num_seasons.HasValue ?
                new ObjectParameter("num_seasons", num_seasons) :
                new ObjectParameter("num_seasons", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("filltvTable", tv_idParameter, tv_titleParameter, num_seasonsParameter);
        }
    }
}
